<?php

/**
 * @file
 * Contains enhanced_user.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\RoleInterface;

/**
 * Implements hook_help().
 */
function enhanced_user_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the enhanced_user module.
    case 'help.page.enhanced_user':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function enhanced_user_theme() {
  return [
    'enhanced_user' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_install().
 */
function enhanced_user_install() {
  // 为已认证用户添加权限
  $permissions = [
    'restful patch enhanced_user_user_profile',
    'restful get enhanced_user_user_info',
    'restful post enhanced_user_upload_avatar',
    'restful post enhanced_user_reset_password'
  ];
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, $permissions);
}

/**
 * Implements hook_entity_base_field_info().
 */
function enhanced_user_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'user') {

    $fields['nick_name'] = BaseFieldDefinition::create('string')
      ->setLabel(t('Nickname'))
      ->setDescription(t('The nickname of the user, not the username.'))
      ->setDefaultValue('User')
      ->setDisplayOptions('view', [
        'label' => 'inline',
        'type' => 'string'
      ])
      ->setDisplayOptions('form', [
        'type' => 'string_textfield'
      ])
      ->setDisplayConfigurable('view', true)
      ->setDisplayConfigurable('form', true);

    $fields['sex'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Sex'))
      ->setDescription(t('Sex of the user.'))
      ->setSetting('target_type', 'sex')
      ->setSetting('handler', 'default')
      ->setDisplayOptions('view', [
        'label' => 'above',
        'type' => 'entity_reference_label'
      ])
      ->setDisplayOptions('form', [
        'type' => 'options_select'
      ])
      ->setDisplayConfigurable('view', true)
      ->setDisplayConfigurable('form', true);

    $fields['birthday'] = BaseFieldDefinition::create('datetime')
      ->setLabel(t('Birthday'))
      ->setDescription(t('Birthday of the user.'))
      ->setSetting('datetime_type', 'date')
      ->setDisplayOptions('view', [
        'label' => 'above',
        'type' => 'datetime_default',
      ])
      ->setDisplayOptions('form', [
        'type' => 'datetime_default',
      ]);
  }
  return $fields;
}
